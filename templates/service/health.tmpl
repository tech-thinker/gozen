package service

import (
	"context"

	"{{.PackageName}}/logger"
	"{{.PackageName}}/models"
	"{{.PackageName}}/repository"
	"{{.PackageName}}/utils"
)

type HealthSvc interface {
	Ping(ctx context.Context) (*models.Health, error)
}

type healthSvc struct {
	healthRepo repository.HealthRepo
}

func (svc *healthSvc) Ping(ctx context.Context) (*models.Health, error) {

	status, err := svc.healthRepo.Ping(ctx)

	if err != nil {
		logger.Log.Error(err)
		return nil, err
	}

	doc := models.Health{
		Success:   status,
		Message:   "Service is up and running",
		HeartBeat: utils.EpochTime(),
	}

	return &doc, nil
}

func NewHealthSvc(
	healthRepo repository.HealthRepo,
) HealthSvc {
	return &healthSvc{
		healthRepo: healthRepo,
	}
}
