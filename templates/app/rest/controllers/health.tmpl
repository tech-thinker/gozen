package controllers

import (
	"net/http"

	"{{.PackageName}}/app"
	"github.com/gin-gonic/gin"
)

// HealthController is an interface for health controller
type HealthController interface {
	Route(router *gin.Engine) *gin.RouterGroup
	Ping(ctx *gin.Context)
}

type healthController struct {
	svc app.ServiceRegistry
}

func (c *healthController) Route(router *gin.Engine) *gin.RouterGroup {
	routerGroup := router.Group("/ping")
	routerGroup.GET("", c.Ping)
	return routerGroup
}

func (c *healthController) Ping(ctx *gin.Context) {
    res, err := c.svc.HealthSvc().Ping(ctx)
	if err!=nil {
		ctx.JSON(http.StatusOK, gin.H{
			"success": false,
			"message": err.Error(),
			"heart_beat": 0,
		})
		return
	}
	ctx.JSON(http.StatusOK, gin.H{
		"success": res.Success,
		"message": res.Message,
		"heart_beat": res.HeartBeat,
	})
}

// NewHealthController initializes health controller with dependency
func NewHealthController(svc app.ServiceRegistry) HealthController {
	return &healthController{
		svc: svc,
	}
}
